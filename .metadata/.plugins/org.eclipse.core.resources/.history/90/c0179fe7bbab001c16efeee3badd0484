package com.luv2code.ecommerce.entity;

import java.math.BigDecimal;
import java.sql.Date;

import javax.persistence.*;

// Hibernate will automatically manage the timestamps
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import lombok.Data;

@Entity
@Table( name = "product" )
@Data
public class Product {	
	
	// product table in SQL Database: id, sku, name, description, unit_price, image_url, active, units_in_stock		
	// JPA Mappings
	
	@Id
	@GeneratedValue( strategy = GenerationType.IDENTITY )
	@Column( name = "id" )
	private Long id;
	
	// this will be the ID from the ProductCategory java file..
	@ManyToOne
	@JoinColumn(name = "category_id", nullable = false)
	private ProductCategory categoryId;	
	 
	@Column( name="sku" )
	private String sku;
	
	@Column( name="name" )
	private String name;
	
	@Column( name="description" )
	private String description;
	
	@Column( name="unit_price" )
	private BigDecimal unitPrice;
	
	@Column( name="image_url" )
	private String imageUrl;
	
	@Column( name="active" )
	private boolean active;
	
	@Column( name="units_in_stock" )
	private int unitsInStock;
	
	@Column( name="date_created" )
	@CreationTimestamp
	private Date dateCreate;
	
	@Column( name="last_updated" )
	@UpdateTimestamp
	private Date lastUpdated;	

};
